// Aquarium Companion App// Written for CS160 Fall 2016// Team 13: Magnetic Magikarps
import {tankPic1 } from "main";let fishTexture = new Texture("assets/img.png");// Skinslet whiteSkin = new Skin({ fill:"white", texture: fishTexture, fill: "white", width: 1000, height: 1000, });let blueSkin = new Skin({ fill: "#14a5ff" });let transparentSkin = new Skin({ fill: "transparent" });// Styleslet titleStyle = new Style( { font: "30px  Marker Felt", color:"white" } );let buttonStyle = new Style({font: '18px', color: 'white'});let boldTextStyle = new Style({font: 'bold 20px', color: 'gray'});let textStyle = new Style({font: '20px', color: 'gray'});let greenStyle = new Style({font: '20px', color: 'green'});let redStyle = new Style({font: '20px', color: 'red'});
export var tank_screen_template = Column.template($ => ({   left: 0, right: 0, top: 0, bottom: 0,   skin: whiteSkin,   contents: [       new Container({			left:0, right:0, height: 40, skin: blueSkin,			contents: [				new Container({					left: 0, right: 240, top: 0, bottom: 0, skin: blueSkin, active: true,					contents: [						new Picture({left:-80, height: 30, url: "assets/back_button.png"})					],					behavior: Behavior ({						onTouchEnded: function(content, id, x, y, ticks) {							application.distribute("onBack");						}					})				}),				new Label({ string: 'Filter', style: titleStyle })			]		}),
		new Container ({			contents:[				new Picture({ top: 30, height: 133, url: 'assets/tank_pic_1.png'})					],			behavior: Behavior ({				onCreate: function(container, data) {					this.count = this.startCount =  99999;					container.interval = 1000;		            container.duration = 99999*1000;						},		        onDisplayed: function(container, data) {		            container.start();		        },		        onTimeChanged: function(container) {		        	trace("count is " + this.count + "\n");		        	this.count -= 1;		        	let modded = this.count%5;				 	if (modded == 0) {				 		container.first.url = 'assets/tank_pic_1.png';				 	} else if (modded == 1){				 		container.first.url = 'assets/tank_pic_2.png'; 					 	} else if (modded == 2){				 		container.first.url = 'assets/tank_pic_3.png'; 					 	} else if (modded == 3){				 		container.first.url = 'assets/tank_pic_4.png'; 					 	} else if (modded == 4){				 		container.first.url = 'assets/tank_pic_5.png'; 					 	}		        }			})		}),		// Contents of the tank screen
		//new Picture({ top: 30, height: 133, url: 'assets/tank_pic_1.png'}),		new Label({ top: 10, string: 'Filter Status', style: boldTextStyle}),		new Label({ top: 8, string: 'Need to Change', style: redStyle,		 	behavior: Behavior ({		 		setTankData(container, filterStatus) {		 			if (filterStatus == "Yes") {		 				container.style = greenStyle;		 				container.string = "Clean";		 				application.distribute("setTankLabel");		 			} else {		 				container.style = redStyle;		 				container.string = "Need to Change";		 			}				} 			})		}),		new Container({			name: 'filterButton',			top: 15, height: 50, width: 100, skin: transparentSkin,			contents: [				new Picture({height:50,url:"assets/change_filter.png", active:true, 					behavior: Behavior({						onTouchBegan(picture) {							picture.url = "assets/change_filter_pressed.png";						},						onTouchEnded(picture) {							picture.url = "assets/change_filter.png";							application.distribute("changeFilter");						}					})				})			],		}),
		new Line ({
			top: 60,
			contents: [
				new Label({  string: 'O2 Saturation: ', style: boldTextStyle }),				new Label({left: 5,  string: '0.73', style: textStyle,					behavior: Behavior({						setTankLabel(container) {							container.string = '0.88'						}					})					  }),				
			]
		}),
		new Line({
			top: 12,
			contents: [
				new Label({string: 'pH: ', style: boldTextStyle }),				new Label({left : 5, string: '6.6', style: textStyle,					behavior: Behavior({						setTankLabel(container) {							container.string = '7.0'						}					})				}),			
			]
		}),   ]}));